{
  "name": "boto",
  "description": "Installs/Configures boto",
  "long_description": "Description\n===========\n\nA Chef cookbook for installing and configuring boto.\n\n# Cookbook Dependencies\n\n* python\n* build-essential\n\nUsage\n=====\n\nExample node.json to install & configure boto, plus fetch a file from S3:\n\n\t{\n\t  \"boto\": {\n\t    \"install_method\":\"pip\",\n\t    \"aws_access_key_id\":\"foo\",\n\t    \"aws_secret_access_key\":\"bar\",\n\t    \"s3_fetch_bucket\":\"foo_bucket\",\n\t    \"s3_fetch_file\":\"foo_file.txt\",\n\t    \"s3_fetch_file_destination\":\"/tmp/foo_file.txt\",\n\t  },\n\t  \"run_list\": [ \"recipe[boto::default]\", \"recipe[boto::s3_fetch_file]\" ]\n\t}\n\nSame, but fetch and extract a zip file from S3 instead:\n\n\t{\n\t  \"boto\": {\n\t    \"install_method\":\"pip\",\n\t    \"aws_access_key_id\":\"foo\",\n\t    \"aws_secret_access_key\":\"bar\",\n\t    \"s3_fetch_bucket\":\"foo_bucket\",\n\t    \"s3_fetch_file\":\"foo_file.zip\",\n\t    \"s3_fetch_file_destination\":\"/tmp/foo_file.zip\",\n\t    \"s3_file_extract_destination\":\"/root\"\n\t  },\n\t  \"run_list\": [ \"recipe[boto::default]\", \"recipe[boto::s3_fetch_and_extract_file]\" ]\n\t}\n\nLicense and Author\n==================\n\nAuthor:: Chris Fordham (<chris.fordham@rightscale.com>)\n\nCopyright 2012, RightScale, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
  "maintainer": "Chris Fordham",
  "maintainer_email": "chris@xhost.com.au",
  "license": "Apache 2.0",
  "platforms": {
  },
  "dependencies": {
    "python": ">= 0.0.0"
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
    "boto/ec2/instance/id": {
      "display_name": "boto EC2 instance ID",
      "description": "The EC2 instance ID to use for operations such as backup and restore (default is the instance ID of the host running the recipe).",
      "required": "optional",
      "recipes": [
        "boto::ebs_create_snapshot",
        "boto::ebs_restore_snapshot",
        "boto::ebs_attach_volume"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "boto/ebs/volume/id": {
      "display_name": "boto EBS volume ID",
      "description": "The EBS volume ID to use for operations such as backup and restore.",
      "required": "required",
      "recipes": [
        "boto::ebs_create_snapshot",
        "boto::ebs_attach_volume",
        "boto::ebs_detach_volume"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "boto/ebs/volume/size": {
      "display_name": "boto EBS volume size",
      "description": "The EBS volume size to use for operations such as backup and restore.",
      "default": "1",
      "required": "recommended",
      "recipes": [
        "boto::ebs_create_snapshot",
        "boto::ebs_restore_snapshot"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "boto/ebs/volume/force_detach": {
      "display_name": "boto EBS force detach",
      "description": "Whether to force detachment when detaching an EBS volume from an instance.",
      "default": "False",
      "choice": [
        "False",
        "True"
      ],
      "required": "optional",
      "recipes": [
        "boto::ebs_detach_volume"
      ],
      "calculated": false,
      "type": "string"
    },
    "boto/ebs/volume/block_device": {
      "display_name": "boto EBS volume block device",
      "description": "The EBS volume block device to use for operations such as backup and restore.",
      "default": "/dev/sdh",
      "required": "recommended",
      "choice": [
        "/dev/sde",
        "/dev/sdf",
        "/dev/sdg",
        "/dev/sdh",
        "/dev/sdi",
        "/dev/sdj",
        "/dev/sdk",
        "/dev/sdl",
        "/dev/sdm",
        "/dev/sdn",
        "/dev/sdo",
        "/dev/sdp",
        "/dev/sdq",
        "/dev/sdr",
        "/dev/sds",
        "/dev/sdt",
        "/dev/sdu",
        "/dev/sdv",
        "/dev/sdw",
        "/dev/sdx",
        "/dev/sdy",
        "/dev/sdz"
      ],
      "recipes": [
        "boto::ebs_restore_snapshot",
        "boto::ebs_attach_volume"
      ],
      "calculated": false,
      "type": "string"
    },
    "boto/ebs/snapshot/id": {
      "display_name": "boto EBS snapshot ID",
      "description": "The EBS snapshot ID to use for operations such as backup and restore.",
      "required": "required",
      "recipes": [
        "boto::ebs_restore_snapshot"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "boto/ec2/region/endpoint": {
      "display_name": "boto EC2 region endpoint",
      "description": "The EC2 region endpoint used for operations.",
      "default": "us-east-1.ec2.amazonaws.com",
      "required": "recommended",
      "choice": [
        "us-east-1.ec2.amazonaws.com",
        "us-west-1.ec2.amazonaws.com",
        "eu-west-1.ec2.amazonaws.com",
        "ap-southeast-1.ec2.amazonaws.com"
      ],
      "recipes": [
        "boto::default",
        "boto::ebs_create_snapshot",
        "boto::ebs_restore_snapshot",
        "boto::ebs_attach_volume",
        "boto::ebs_detach_volume",
        "boto::ebs_print_attached_volumes"
      ],
      "calculated": false,
      "type": "string"
    },
    "boto/ec2/region/name": {
      "display_name": "boto EC2 region name",
      "description": "The EC2 region used for operations.",
      "default": "us-east-1",
      "required": "recommended",
      "choice": [
        "us-east-1",
        "us-west-1",
        "eu-west-1",
        "ap-southeast-1"
      ],
      "recipes": [
        "boto::default",
        "boto::ebs_create_snapshot",
        "boto::ebs_restore_snapshot",
        "boto::ebs_attach_volume",
        "boto::ebs_detach_volume",
        "boto::ebs_print_attached_volumes"
      ],
      "calculated": false,
      "type": "string"
    },
    "boto/ec2/availability_zone": {
      "display_name": "boto EC2 availability zone",
      "description": "The EC2 availability zone used for operations.",
      "default": "us-east-1a",
      "required": "recommended",
      "choice": [
        "us-east-1a",
        "us-west-1a",
        "eu-west-1a",
        "ap-southeast-1a"
      ],
      "recipes": [
        "boto::default",
        "boto::ebs_restore_snapshot"
      ],
      "calculated": false,
      "type": "string"
    },
    "boto/install_method": {
      "display_name": "boto Install Method",
      "description": "The method used to install the boto library.",
      "default": "package",
      "required": "recommended",
      "choice": [
        "package",
        "pip",
        "source"
      ],
      "recipes": [
        "boto::install"
      ],
      "calculated": false,
      "type": "string"
    },
    "boto/aws_access_key_id": {
      "display_name": "boto AWS Access Key ID",
      "description": "AWS Access Key ID for boto.",
      "required": "required",
      "recipes": [
        "boto::configure"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "boto/aws_secret_access_key": {
      "display_name": "boto AWS Secret Access Key",
      "description": "AWS Secrete Access Key for boto.",
      "required": "required",
      "recipes": [
        "boto::configure"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "boto/num_retries": {
      "display_name": "boto Number Retries",
      "description": "The number of times boto retries an action.",
      "default": "10",
      "required": "optional",
      "recipes": [
        "boto::configure"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "boto/debug": {
      "display_name": "boto Debug Level",
      "description": "The debug level for boto.",
      "default": "0",
      "required": "optional",
      "recipes": [
        "boto::configure"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "boto/s3_fetch_bucket": {
      "display_name": "boto S3 Fetch Bucket",
      "description": "The bucket to use when fetching a file with s3_fetch_file.",
      "required": "optional",
      "recipes": [
        "boto::s3_fetch_file",
        "boto::s3_fetch_and_extract_file"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "boto/s3_fetch_file": {
      "display_name": "boto S3 Fetch File",
      "description": "The S3 key/file to fetch with s3_fetch_file.",
      "required": "optional",
      "recipes": [
        "boto::s3_fetch_file",
        "boto::s3_fetch_and_extract_file"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "boto/s3_fetch_file_destination": {
      "display_name": "boto S3 Fetch File Dest",
      "description": "The destination file/folder to store the fetched file with s3_fetch_file",
      "required": "optional",
      "recipes": [
        "boto::s3_fetch_file",
        "boto::s3_fetch_and_extract_file"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "boto/s3_file_extract_destination": {
      "display_name": "boto S3 File Extract Dest",
      "description": "The destination folder to extract the fetched file with s3_fetch_file",
      "required": "optional",
      "recipes": [
        "boto::s3_fetch_and_extract_file"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "boto/s3_store_bucket": {
      "display_name": "boto S3 Store Bucket",
      "description": "The bucket to use when storing a file with s3_store_file.",
      "required": "optional",
      "recipes": [
        "boto::s3_store_file"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "boto/s3_store_file": {
      "display_name": "boto S3 Store File",
      "description": "The local file to store with in S3 with s3_store_file.",
      "required": "optional",
      "recipes": [
        "boto::s3_store_file"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    }
  },
  "groupings": {
  },
  "recipes": {
    "boto::configure": "Configures boto.",
    "boto::default": "Installs & configures boto.",
    "boto::ebs_attach_volume": "Attaches a given EBS volume to an instance.",
    "boto::ebs_create_snapshot": "Creates an EBS snapshot from a given EBS volume ID.",
    "boto::ebs_detach_volume": "Detaches a given EBS volume from an instance.",
    "boto::ebs_mount_volume": "Mounts an EBS volume attached to an instance.",
    "boto::ebs_print_attached_volumes": "Prints all EBS volumes attached to an instance.",
    "boto::ebs_restore_snapshot": "Restores an EBS snapshot from a given EBS snapshot ID.",
    "boto::ec2_print_instance_id": "Prints the instance ID of the host instance.",
    "boto::ec2_print_instance_metadata": "Prints the instance metadata of the host instance in JSON format.",
    "boto::install": "Installs boto.",
    "boto::install_from_package": "Installs boto by package.",
    "boto::install_from_pip": "Installs boto using PIP.",
    "boto::install_from_source": "Installs boto from source.",
    "boto::s3_fetch_file": "Fetches and stores a file locally from S3.",
    "boto::s3_fetch_and_extract_file": "Fetches and extracts a file from S3.",
    "boto::s3_store_file": "Stores a local file to an S3 bucket."
  },
  "version": "0.0.1"
}